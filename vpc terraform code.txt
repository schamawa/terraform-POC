provider "aws" {

  region = "ap-south-1"
}

resource "aws_vpc" "test_vpc" {
  cidr_block = "10.10.0.0/16"
  tags = {
    name = "test"
}
}

resource "aws_subnet" "vpc_subnet" {
  vpc_id = aws_vpc.test_vpc.id
  cidr_block = "10.10.3.0/24"
  availability_zone = "ap-south-1b"
  map_public_ip_on_launch = "true"

  tags = {
    name = "test"
}
}

resource "aws_internet_gateway" "test_igw" {
  vpc_id = aws_vpc.test_vpc.id
 
  tags = {
    Name = "igw"
  }
}

resource "aws_route_table" "Test_route" {
  vpc_id = aws_vpc.test_vpc.id
  route {
    cidr_block     = "0.0.0.0/0" 
    gateway_id = aws_internet_gateway.test_igw.id
  }

  tags = {
    Name = "igw-route"
  }
}

resource "aws_route_table_association" "test-rta" {
  route_table_id = aws_route_table.Test_route.id
  subnet_id = aws_subnet.vpc_subnet.id
}

resource "aws_security_group" "test" {
  name = "test"
  vpc_id = aws_vpc.test_vpc.id
  ingress {
  from_port = "22"
  to_port = "22"
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

egress {
    from_port = 0
    protocol = "-1"
    to_port = 0
    cidr_blocks = ["0.0.0.0/0"]
  }

ingress {
  from_port = "80"
  to_port = "80"
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

egress {
    from_port = 0
    protocol = "-1"
    to_port = 0
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "test" {
   ami = "ami-076e3a557efe1aa9c"
   subnet_id = aws_subnet.vpc_subnet.id
   instance_type = "t2.micro"
   vpc_security_group_ids = [aws_security_group.test.id]
   user_data = <<EOF
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          EC2_AVAIL_ZONE=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
          echo "<h1>Hello World from $(hostname -f) in AZ $EC2_AVAIL_ZONE </h1>" > /var/www/html/index.html
    EOF

 

   tags = {
    name = "prod"
}
}

output "aws_instance_public_ip" {
  value = aws_instance.test.public_ip
}

output "aws_security_group_name" {
  value = aws_security_group.test.id

}